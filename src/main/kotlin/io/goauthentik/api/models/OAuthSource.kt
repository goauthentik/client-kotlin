/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.goauthentik.api.models

import io.goauthentik.api.models.PolicyEngineMode
import io.goauthentik.api.models.ProviderTypeEnum
import io.goauthentik.api.models.SourceType
import io.goauthentik.api.models.UserMatchingModeEnum

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * OAuth Source Serializer
 *
 * @param pk 
 * @param name Source's display Name.
 * @param slug Internal source name, used in URLs.
 * @param component Get object component so that we know how to edit the object
 * @param verboseName Return object's verbose_name
 * @param verboseNamePlural Return object's plural verbose_name
 * @param metaModelName Return internal model name
 * @param managed Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
 * @param icon Get the URL to the Icon. If the name is /static or starts with http it is returned as-is
 * @param providerType 
 * @param consumerKey 
 * @param callbackUrl Get OAuth Callback URL
 * @param type 
 * @param enabled 
 * @param authenticationFlow Flow to use when authenticating existing users.
 * @param enrollmentFlow Flow to use when enrolling new users.
 * @param policyEngineMode 
 * @param userMatchingMode 
 * @param userPathTemplate 
 * @param requestTokenUrl URL used to request the initial token. This URL is only required for OAuth 1.
 * @param authorizationUrl URL the user is redirect to to conest the flow.
 * @param accessTokenUrl URL used by authentik to retrieve tokens.
 * @param profileUrl URL used by authentik to get user information.
 * @param additionalScopes 
 * @param oidcWellKnownUrl 
 * @param oidcJwksUrl 
 * @param oidcJwks 
 */


data class OAuthSource (

    @Json(name = "pk")
    val pk: java.util.UUID,

    /* Source's display Name. */
    @Json(name = "name")
    val name: kotlin.String,

    /* Internal source name, used in URLs. */
    @Json(name = "slug")
    val slug: kotlin.String,

    /* Get object component so that we know how to edit the object */
    @Json(name = "component")
    val component: kotlin.String,

    /* Return object's verbose_name */
    @Json(name = "verbose_name")
    val verboseName: kotlin.String,

    /* Return object's plural verbose_name */
    @Json(name = "verbose_name_plural")
    val verboseNamePlural: kotlin.String,

    /* Return internal model name */
    @Json(name = "meta_model_name")
    val metaModelName: kotlin.String,

    /* Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update. */
    @Json(name = "managed")
    val managed: kotlin.String?,

    /* Get the URL to the Icon. If the name is /static or starts with http it is returned as-is */
    @Json(name = "icon")
    val icon: kotlin.String?,

    @Json(name = "provider_type")
    val providerType: ProviderTypeEnum,

    @Json(name = "consumer_key")
    val consumerKey: kotlin.String,

    /* Get OAuth Callback URL */
    @Json(name = "callback_url")
    val callbackUrl: kotlin.String,

    @Json(name = "type")
    val type: SourceType,

    @Json(name = "enabled")
    val enabled: kotlin.Boolean? = null,

    /* Flow to use when authenticating existing users. */
    @Json(name = "authentication_flow")
    val authenticationFlow: java.util.UUID? = null,

    /* Flow to use when enrolling new users. */
    @Json(name = "enrollment_flow")
    val enrollmentFlow: java.util.UUID? = null,

    @Json(name = "policy_engine_mode")
    val policyEngineMode: PolicyEngineMode? = null,

    @Json(name = "user_matching_mode")
    val userMatchingMode: UserMatchingModeEnum? = null,

    @Json(name = "user_path_template")
    val userPathTemplate: kotlin.String? = null,

    /* URL used to request the initial token. This URL is only required for OAuth 1. */
    @Json(name = "request_token_url")
    val requestTokenUrl: kotlin.String? = null,

    /* URL the user is redirect to to conest the flow. */
    @Json(name = "authorization_url")
    val authorizationUrl: kotlin.String? = null,

    /* URL used by authentik to retrieve tokens. */
    @Json(name = "access_token_url")
    val accessTokenUrl: kotlin.String? = null,

    /* URL used by authentik to get user information. */
    @Json(name = "profile_url")
    val profileUrl: kotlin.String? = null,

    @Json(name = "additional_scopes")
    val additionalScopes: kotlin.String? = null,

    @Json(name = "oidc_well_known_url")
    val oidcWellKnownUrl: kotlin.String? = null,

    @Json(name = "oidc_jwks_url")
    val oidcJwksUrl: kotlin.String? = null,

    @Json(name = "oidc_jwks")
    val oidcJwks: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null

)

