/**
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2023.8.3
 * Contact: hello@goauthentik.io
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.goauthentik.api.models

import io.goauthentik.api.models.AccessDeniedChallenge
import io.goauthentik.api.models.AppleLoginChallenge
import io.goauthentik.api.models.AuthenticatorDuoChallenge
import io.goauthentik.api.models.AuthenticatorSMSChallenge
import io.goauthentik.api.models.AuthenticatorStaticChallenge
import io.goauthentik.api.models.AuthenticatorTOTPChallenge
import io.goauthentik.api.models.AuthenticatorValidationChallenge
import io.goauthentik.api.models.AuthenticatorWebAuthnChallenge
import io.goauthentik.api.models.AutosubmitChallenge
import io.goauthentik.api.models.CaptchaChallenge
import io.goauthentik.api.models.ChallengeChoices
import io.goauthentik.api.models.ConsentChallenge
import io.goauthentik.api.models.ContextualFlowInfo
import io.goauthentik.api.models.DeviceChallenge
import io.goauthentik.api.models.DummyChallenge
import io.goauthentik.api.models.EmailChallenge
import io.goauthentik.api.models.ErrorDetail
import io.goauthentik.api.models.FlowErrorChallenge
import io.goauthentik.api.models.IdentificationChallenge
import io.goauthentik.api.models.LoginSource
import io.goauthentik.api.models.OAuthDeviceCodeChallenge
import io.goauthentik.api.models.OAuthDeviceCodeFinishChallenge
import io.goauthentik.api.models.PasswordChallenge
import io.goauthentik.api.models.Permission
import io.goauthentik.api.models.PlexAuthenticationChallenge
import io.goauthentik.api.models.PromptChallenge
import io.goauthentik.api.models.RedirectChallenge
import io.goauthentik.api.models.SelectableStage
import io.goauthentik.api.models.ShellChallenge
import io.goauthentik.api.models.StagePrompt
import io.goauthentik.api.models.UserLoginChallenge

import com.squareup.moshi.Json

/**
 * 
 *
 * @param type 
 * @param pendingUser 
 * @param pendingUserAvatar 
 * @param clientId 
 * @param scope 
 * @param redirectUri 
 * @param state 
 * @param activationBarcode 
 * @param activationCode 
 * @param stageUuid 
 * @param codes 
 * @param configUrl 
 * @param deviceChallenges 
 * @param configurationStages 
 * @param registration 
 * @param url 
 * @param attrs 
 * @param siteKey 
 * @param jsUrl 
 * @param permissions 
 * @param additionalPermissions 
 * @param token 
 * @param requestId 
 * @param userFields 
 * @param passwordFields 
 * @param primaryAction 
 * @param showSourceLabels 
 * @param slug 
 * @param fields 
 * @param to 
 * @param body 
 * @param flowInfo 
 * @param component 
 * @param responseErrors 
 * @param errorMessage 
 * @param phoneNumberRequired 
 * @param title 
 * @param headerText 
 * @param error 
 * @param traceback 
 * @param applicationPre 
 * @param enrollUrl 
 * @param recoveryUrl 
 * @param passwordlessUrl 
 * @param sources 
 */

interface ChallengeTypes {

    @Json(name = "type")
    val type: ChallengeChoices
    @Json(name = "pending_user")
    val pendingUser: kotlin.String
    @Json(name = "pending_user_avatar")
    val pendingUserAvatar: kotlin.String
    @Json(name = "client_id")
    val clientId: kotlin.String
    @Json(name = "scope")
    val scope: kotlin.String
    @Json(name = "redirect_uri")
    val redirectUri: kotlin.String
    @Json(name = "state")
    val state: kotlin.String
    @Json(name = "activation_barcode")
    val activationBarcode: kotlin.String
    @Json(name = "activation_code")
    val activationCode: kotlin.String
    @Json(name = "stage_uuid")
    val stageUuid: kotlin.String
    @Json(name = "codes")
    val codes: kotlin.collections.List<kotlin.String>
    @Json(name = "config_url")
    val configUrl: kotlin.String
    @Json(name = "device_challenges")
    val deviceChallenges: kotlin.collections.List<DeviceChallenge>
    @Json(name = "configuration_stages")
    val configurationStages: kotlin.collections.List<SelectableStage>
    @Json(name = "registration")
    val registration: kotlin.collections.Map<kotlin.String, kotlin.Any>
    @Json(name = "url")
    val url: kotlin.String
    @Json(name = "attrs")
    val attrs: kotlin.collections.Map<kotlin.String, kotlin.String>
    @Json(name = "site_key")
    val siteKey: kotlin.String
    @Json(name = "js_url")
    val jsUrl: kotlin.String
    @Json(name = "permissions")
    val permissions: kotlin.collections.List<Permission>
    @Json(name = "additional_permissions")
    val additionalPermissions: kotlin.collections.List<Permission>
    @Json(name = "token")
    val token: kotlin.String
    @Json(name = "request_id")
    val requestId: kotlin.String
    @Json(name = "user_fields")
    val userFields: kotlin.collections.List<kotlin.String>?
    @Json(name = "password_fields")
    val passwordFields: kotlin.Boolean
    @Json(name = "primary_action")
    val primaryAction: kotlin.String
    @Json(name = "show_source_labels")
    val showSourceLabels: kotlin.Boolean
    @Json(name = "slug")
    val slug: kotlin.String
    @Json(name = "fields")
    val fields: kotlin.collections.List<StagePrompt>
    @Json(name = "to")
    val to: kotlin.String
    @Json(name = "body")
    val body: kotlin.String
    @Json(name = "flow_info")
    val flowInfo: ContextualFlowInfo?
    @Json(name = "component")
    val component: kotlin.String?
    @Json(name = "response_errors")
    val responseErrors: kotlin.collections.Map<kotlin.String, kotlin.collections.List<ErrorDetail>>?
    @Json(name = "error_message")
    val errorMessage: kotlin.String?
    @Json(name = "phone_number_required")
    val phoneNumberRequired: kotlin.Boolean?
    @Json(name = "title")
    val title: kotlin.String?
    @Json(name = "header_text")
    val headerText: kotlin.String?
    @Json(name = "error")
    val error: kotlin.String?
    @Json(name = "traceback")
    val traceback: kotlin.String?
    @Json(name = "application_pre")
    val applicationPre: kotlin.String?
    @Json(name = "enroll_url")
    val enrollUrl: kotlin.String?
    @Json(name = "recovery_url")
    val recoveryUrl: kotlin.String?
    @Json(name = "passwordless_url")
    val passwordlessUrl: kotlin.String?
    @Json(name = "sources")
    val sources: kotlin.collections.List<LoginSource>?
}

