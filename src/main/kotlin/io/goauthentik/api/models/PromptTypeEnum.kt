/**
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2023.10.0
 * Contact: hello@goauthentik.io
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.goauthentik.api.models


import com.squareup.moshi.Json

/**
 * * `text` - Text: Simple Text input * `text_area` - Text area: Multiline Text Input. * `text_read_only` - Text (read-only): Simple Text input, but cannot be edited. * `text_area_read_only` - Text area (read-only): Multiline Text input, but cannot be edited. * `username` - Username: Same as Text input, but checks for and prevents duplicate usernames. * `email` - Email: Text field with Email type. * `password` - Password: Masked input, multiple inputs of this type on the same prompt need to be identical. * `number` - Number * `checkbox` - Checkbox * `radio-button-group` - Fixed choice field rendered as a group of radio buttons. * `dropdown` - Fixed choice field rendered as a dropdown. * `date` - Date * `date-time` - Date Time * `file` - File: File upload for arbitrary files. File content will be available in flow context as data-URI * `separator` - Separator: Static Separator Line * `hidden` - Hidden: Hidden field, can be used to insert data into form. * `static` - Static: Static value, displayed as-is. * `ak-locale` - authentik: Selection of locales authentik supports
 *
 * Values: text,textArea,textReadOnly,textAreaReadOnly,username,email,password,number,checkbox,radioMinusButtonMinusGroup,dropdown,date,dateMinusTime,file,separator,hidden,static,akMinusLocale,unknownDefaultOpenApi
 */

enum class PromptTypeEnum(val value: kotlin.String) {

    @Json(name = "text")
    text("text"),

    @Json(name = "text_area")
    textArea("text_area"),

    @Json(name = "text_read_only")
    textReadOnly("text_read_only"),

    @Json(name = "text_area_read_only")
    textAreaReadOnly("text_area_read_only"),

    @Json(name = "username")
    username("username"),

    @Json(name = "email")
    email("email"),

    @Json(name = "password")
    password("password"),

    @Json(name = "number")
    number("number"),

    @Json(name = "checkbox")
    checkbox("checkbox"),

    @Json(name = "radio-button-group")
    radioMinusButtonMinusGroup("radio-button-group"),

    @Json(name = "dropdown")
    dropdown("dropdown"),

    @Json(name = "date")
    date("date"),

    @Json(name = "date-time")
    dateMinusTime("date-time"),

    @Json(name = "file")
    file("file"),

    @Json(name = "separator")
    separator("separator"),

    @Json(name = "hidden")
    hidden("hidden"),

    @Json(name = "static")
    static("static"),

    @Json(name = "ak-locale")
    akMinusLocale("ak-locale"),

    @Json(name = "unknown_default_open_api")
    unknownDefaultOpenApi("unknown_default_open_api");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is PromptTypeEnum) "$data" else null

        /**
         * Returns a valid [PromptTypeEnum] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): PromptTypeEnum? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

